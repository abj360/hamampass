model Booking {
  id         String   @id @unique @default(uuid())
  date       DateTime
  propertyId String
  property   Property @relation(fields: [propertyId], references: [id])
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  products   Json
  totalMoney Float
  review     Review?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// products : {
//   "0":{
//     count: 1,
//     price: 100
//   },
//   "1":{
//     count: 2,
//     price: 200
//   }
// }

model Review {
  id      String @id @default(uuid())
  rateObj Json
  rate    Float
  comment String

  detailsId    String?         @unique
  rate_details Review_Details? @relation(fields: [detailsId], references: [id], onDelete: Cascade)
  bookingId    String          @unique
  booking      Booking         @relation(fields: [bookingId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review_Details {
  id String @id @default(uuid())

  location        Int
  staff           Int
  atmosphere      Int
  cleanliness     Int
  facilities      Int
  value_for_money Int

  review Review?
}

// enum Review_Type{
// solo === 0
// couple === 1
// family === 2
// friends === 3
// }

// enum Porduct_Type{ 
// basic === 0  // only entry
// regular === 1   // entry + body scrub
// }
